import { Injectable } from '@nestjs/common';
import { InjectBot } from 'nestjs-telegraf';
import { Telegraf, Context } from 'telegraf';
import { Markup } from 'telegraf';

@Injectable()
export class InlineService {
	constructor(@InjectBot() private readonly bot: Telegraf<Context>) {}

	async sendInlineKeyboard(chatId: number, text: string) {
		const keyboard = Markup.inlineKeyboard([
			[
				Markup.button.callback('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', 'confirm_action'),
				Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', 'cancel_action'),
			],
			[
				Markup.button.url('üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è', 'https://docs.nestjs.com'),
				Markup.button.callback('üîÑ –û–±–Ω–æ–≤–∏—Ç—å', 'refresh_data'),
			],
			[
				Markup.button.callback('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'show_stats'),
				Markup.button.callback('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'show_settings'),
			],
		]);

		await this.bot.telegram.sendMessage(chatId, text, keyboard);
	}

	async sendPaginatedKeyboard(chatId: number) {
		const keyboard = Markup.inlineKeyboard([
			[Markup.button.callback('–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1', 'page_1'), Markup.button.callback('–°—Ç—Ä–∞–Ω–∏—Ü–∞ 2', 'page_2')],
			[Markup.button.callback('–î–∞–ª–µ–µ ‚Üí', 'next_page')],
		]);

		await this.bot.telegram.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É:', keyboard);
	}
}
